{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport class MenuComponent {}\nMenuComponent.ɵfac = function MenuComponent_Factory(t) {\n  return new (t || MenuComponent)();\n};\nMenuComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MenuComponent,\n  selectors: [[\"app-menu\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 31,\n  vars: 0,\n  consts: [[\"id\", \"accordionFlushExample\", 1, \"accordion\", \"accordion-flush\"], [1, \"accordion-item\"], [1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#flush-collapseOne\", \"aria-expanded\", \"false\", \"aria-controls\", \"flush-collapseOne\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"flush-collapseOne\", \"data-bs-parent\", \"#accordionFlushExample\", 1, \"accordion-collapse\", \"collapse\"], [1, \"accordion-body\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#flush-collapseTwo\", \"aria-expanded\", \"false\", \"aria-controls\", \"flush-collapseTwo\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"flush-collapseTwo\", \"data-bs-parent\", \"#accordionFlushExample\", 1, \"accordion-collapse\", \"collapse\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#flush-collapseThree\", \"aria-expanded\", \"false\", \"aria-controls\", \"flush-collapseThree\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"flush-collapseThree\", \"data-bs-parent\", \"#accordionFlushExample\", 1, \"accordion-collapse\", \"collapse\"]],\n  template: function MenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2)(3, \"button\", 3);\n      i0.ɵɵtext(4, \" Accordion Item #1 \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5);\n      i0.ɵɵtext(7, \"Placeholder content for this accordion, which is intended to demonstrate the \");\n      i0.ɵɵelementStart(8, \"code\");\n      i0.ɵɵtext(9, \".accordion-flush\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10, \" class. This is the first item's accordion body.\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 1)(12, \"h2\", 2)(13, \"button\", 6);\n      i0.ɵɵtext(14, \" Accordion Item #2 \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"div\", 5);\n      i0.ɵɵtext(17, \"Placeholder content for this accordion, which is intended to demonstrate the \");\n      i0.ɵɵelementStart(18, \"code\");\n      i0.ɵɵtext(19, \".accordion-flush\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \" class. This is the second item's accordion body. Let's imagine this being filled with some actual content.\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\", 1)(22, \"h2\", 2)(23, \"button\", 8);\n      i0.ɵɵtext(24, \" Accordion Item #3 \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 9)(26, \"div\", 5);\n      i0.ɵɵtext(27, \"Placeholder content for this accordion, which is intended to demonstrate the \");\n      i0.ɵɵelementStart(28, \"code\");\n      i0.ɵɵtext(29, \".accordion-flush\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \" class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  dependencies: [CommonModule],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["CommonModule","MenuComponent","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","MenuComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"sources":["/Users/boromndindi/Desktop/workpaces/project/gestion-stock/src/app/composants/menu/menu.component.ts","/Users/boromndindi/Desktop/workpaces/project/gestion-stock/src/app/composants/menu/menu.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-menu',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent {\n\n}\n","<div class=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\">\n        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n          Accordion Item #1\n        </button>\n      </h2>\n      <div id=\"flush-collapseOne\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionFlushExample\">\n        <div class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the first item's accordion body.</div>\n      </div>\n    </div>\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\">\n        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\n          Accordion Item #2\n        </button>\n      </h2>\n      <div id=\"flush-collapseTwo\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionFlushExample\">\n        <div class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>\n      </div>\n    </div>\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\">\n        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\n          Accordion Item #3\n        </button>\n      </h2>\n      <div id=\"flush-collapseThree\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionFlushExample\">\n        <div class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\n      </div>\n    </div>\n  </div>"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;;AAS9C,OAAM,MAAOC,aAAa;AAAbA,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;QAAbA,aAAa;EAAAC,SAAA;EAAAC,UAAA;EAAAC,QAAA,GAAAC,EAAA,CAAAC,mBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV1BP,EAAA,CAAAS,cAAA,aAAkE;MAIxDT,EAAA,CAAAU,MAAA,0BACF;MAAAV,EAAA,CAAAW,YAAA,EAAS;MAEXX,EAAA,CAAAS,cAAA,aAAwG;MAC1ET,EAAA,CAAAU,MAAA,oFAA6E;MAAAV,EAAA,CAAAS,cAAA,WAAM;MAAAT,EAAA,CAAAU,MAAA,uBAAgB;MAAAV,EAAA,CAAAW,YAAA,EAAO;MAACX,EAAA,CAAAU,MAAA,wDAA+C;MAAAV,EAAA,CAAAW,YAAA,EAAM;MAGhMX,EAAA,CAAAS,cAAA,cAA4B;MAGtBT,EAAA,CAAAU,MAAA,2BACF;MAAAV,EAAA,CAAAW,YAAA,EAAS;MAEXX,EAAA,CAAAS,cAAA,cAAwG;MAC1ET,EAAA,CAAAU,MAAA,qFAA6E;MAAAV,EAAA,CAAAS,cAAA,YAAM;MAAAT,EAAA,CAAAU,MAAA,wBAAgB;MAAAV,EAAA,CAAAW,YAAA,EAAO;MAACX,EAAA,CAAAU,MAAA,mHAA0G;MAAAV,EAAA,CAAAW,YAAA,EAAM;MAG3PX,EAAA,CAAAS,cAAA,cAA4B;MAGtBT,EAAA,CAAAU,MAAA,2BACF;MAAAV,EAAA,CAAAW,YAAA,EAAS;MAEXX,EAAA,CAAAS,cAAA,cAA0G;MAC5ET,EAAA,CAAAU,MAAA,qFAA6E;MAAAV,EAAA,CAAAS,cAAA,YAAM;MAAAT,EAAA,CAAAU,MAAA,wBAAgB;MAAAV,EAAA,CAAAW,YAAA,EAAO;MAACX,EAAA,CAAAU,MAAA,yQAAgQ;MAAAV,EAAA,CAAAW,YAAA,EAAM;;;iBDtBzYhB,YAAY;EAAAiB,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}